{"version":3,"sources":["ColoredLed.tsx","App.tsx","index.tsx"],"names":["ColoredLed","color","baseColor","Color","hslLDivTwo","darken","hslSMinus6","desaturate","xmlns","viewBox","y2","x2","y1","x1","id","offset","stopColor","spreadMethod","stopOpacity","toString","transform","fillOpacity","r","cy","cx","strokeLinecap","strokeWidth","fill","ry","rx","App","props","handleChangeComplete","setState","hex","state","bind","className","map","key","this","onChangeComplete","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAqCeA,EA9BI,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAEZC,EAAYC,IAAMF,GAElBG,EAAaF,EAAUG,OAAO,IAC9BC,EAAaJ,EAAUK,WAAW,KAExC,OAAQ,yBAAKC,MAAM,6BAA6BC,QAAQ,eACpD,8BACI,oCAAgBC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC3C,0BAAMC,OAAO,IAAIC,UAAU,YAC3B,0BAAMD,OAAO,IAAIC,UAAU,aAE/B,oCAAgBC,aAAa,MAAMP,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,UAC9D,0BAAMC,OAAO,IAAIG,YAAY,WAAWF,UAAWd,EAAUiB,aAC7D,0BAAMJ,OAAO,IAAIG,YAAY,WAAWF,UAAWZ,EAAWe,cAElE,oCAAgBF,aAAa,MAAMP,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,WAC9D,0BAAMC,OAAO,IAAIG,YAAY,WAAWF,UAAU,UAClD,0BAAMD,OAAO,WAAWG,YAAY,WAAWF,UAAWV,EAAWa,eAG7E,2BACI,4BAAQC,UAAU,qBAAqBC,YAAY,OAAOP,GAAG,QAAQQ,EAAE,UAAUC,GAAG,MAAMC,GAAG,MAAMC,cAAc,QAAQC,YAAY,OAAOC,KAAK,eACjJ,4BAAQb,GAAG,QAAQQ,EAAE,MAAMC,GAAG,aAAaC,GAAG,aAAaH,YAAY,OAAOI,cAAc,QAAQC,YAAY,OAAOC,KAAK,eAC5H,4BAAQb,GAAG,QAAQQ,EAAE,MAAMC,GAAG,aAAaC,GAAG,aAAaC,cAAc,QAAQC,YAAY,OAAOC,KAAK,iBACzG,6BAASP,UAAU,kCAAkCN,GAAG,SAASc,GAAG,YAAYC,GAAG,YAAYN,GAAG,aAAaC,GAAG,aAAaC,cAAc,QAAQC,YAAY,OAAOC,KAAK,qBCa1KG,E,kDAtCb,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IAMRC,qBAAuB,SAAC/B,GACtB,EAAKgC,SAAS,CAAEhC,MAAOA,EAAMiC,OAL7B,EAAKC,MAAQ,CAAElC,MAAO,OACtB,EAAK+B,qBAAuB,EAAKA,qBAAqBI,KAA1B,gBAJP,E,qDAYrB,OAAO,yBAAKC,UAAU,OACpB,4BAAQA,UAAU,cAChB,oCACO,+CAGT,iCACE,wBAAIA,UAAU,oBAAd,UACA,6BAASA,UAAU,mBAChB,CAAC,MAAO,QAAS,OAAQ,WAAWC,KAAI,SAAArC,GAAK,OAC5C,yBAAKsC,IAAKtC,EAAOoC,UAAU,OAAM,8BAAOpC,GAAa,kBAAC,EAAD,CAAYsC,IAAKtC,EAAOA,MAAOA,SAGxF,wBAAIoC,UAAU,oBAAd,WACA,6BAASA,UAAU,mBACjB,kBAAC,eAAD,CACEpC,MAAOuC,KAAKL,MAAMlC,MAClBwC,iBAAkBD,KAAKR,uBAEzB,yBAAKK,UAAU,OAAM,kBAAC,EAAD,CAAYE,IAAKC,KAAKL,MAAMlC,MAAOA,MAAOuC,KAAKL,MAAMlC,gB,GAjClEyC,IAAMC,WCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8b26f226.chunk.js","sourcesContent":["import React from 'react';\nimport Color from 'color';\n\ntype ColoredLedProps = {\n    color: string\n}\n\nconst ColoredLed = ({ color }: ColoredLedProps) => {\n\n    const baseColor = Color(color);\n\n    const hslLDivTwo = baseColor.darken(0.5);\n    const hslSMinus6 = baseColor.desaturate(0.06);\n    \n    return (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 480\">\n        <defs>\n            <linearGradient y2=\"0\" x2=\"1\" y1=\"0\" x1=\"0\" id=\"ring\">\n                <stop offset=\"0\" stopColor=\"#bfbfbf\" />\n                <stop offset=\"1\" stopColor=\"#404040\" />\n            </linearGradient>\n            <linearGradient spreadMethod=\"pad\" y2=\"1\" x2=\"1\" y1=\"0\" x1=\"0\" id=\"center\">\n                <stop offset=\"0\" stopOpacity=\"0.992188\" stopColor={baseColor.toString()} />\n                <stop offset=\"1\" stopOpacity=\"0.988281\" stopColor={hslLDivTwo.toString()} />\n            </linearGradient>\n            <linearGradient spreadMethod=\"pad\" y2=\"1\" x2=\"1\" y1=\"0\" x1=\"0\" id=\"reflect\">\n                <stop offset=\"0\" stopOpacity=\"0.996094\" stopColor=\"white\" />\n                <stop offset=\"0.703125\" stopOpacity=\"0.984375\" stopColor={hslSMinus6.toString()} />\n            </linearGradient>\n        </defs>\n        <g>\n            <circle transform=\"rotate(90 320 240)\" fillOpacity=\"0.77\" id=\"svg_3\" r=\"196.125\" cy=\"240\" cx=\"320\" strokeLinecap=\"round\" strokeWidth=\"17.5\" fill=\"url(#ring)\" />\n            <circle id=\"svg_7\" r=\"160\" cy=\"239.999045\" cx=\"319.252837\" fillOpacity=\"0.64\" strokeLinecap=\"round\" strokeWidth=\"17.5\" fill=\"url(#ring)\" />\n            <circle id=\"svg_8\" r=\"150\" cy=\"240.001698\" cx=\"320.000535\" strokeLinecap=\"round\" strokeWidth=\"17.5\" fill=\"url(#center)\" />\n            <ellipse transform=\"rotate(-47.7626 249.18 168.124)\" id=\"svg_20\" ry=\"44.402987\" rx=\"75.675959\" cy=\"168.124194\" cx=\"249.179609\" strokeLinecap=\"round\" strokeWidth=\"17.5\" fill=\"url(#reflect)\" />\n        </g>\n    </svg>);\n};\nexport default ColoredLed;\n","import React from 'react';\nimport './App.css';\nimport { SketchPicker, ColorResult } from 'react-color'\nimport ColoredLed from './ColoredLed';\n\n\nclass App extends React.Component<{}, { color: string }> {\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { color: 'red' };\n    this.handleChangeComplete = this.handleChangeComplete.bind(this);\n  }\n\n  handleChangeComplete = (color: ColorResult) => {\n    this.setState({ color: color.hex });\n  };\n\n  render() {\n    return <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Some <code>colored-led</code>\n        </h1>\n      </header>\n      <section>\n        <h2 className=\"title-indicators\">Static</h2>\n        <article className=\"some-indicators\">\n          {['red', 'green', 'blue', '#123456'].map(color =>\n            <div key={color} className='led'><span>{color}</span><ColoredLed key={color} color={color} /></div>\n          )}\n        </article>\n        <h2 className=\"title-indicators\">Dynamic</h2>\n        <article className=\"some-indicators\">\n          <SketchPicker\n            color={this.state.color}\n            onChangeComplete={this.handleChangeComplete}\n          />\n          <div className='led'><ColoredLed key={this.state.color} color={this.state.color} /></div>\n        </article>\n      </section>\n    </div>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}